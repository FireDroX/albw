{"version":3,"file":"static/js/245.ccfb20de.chunk.js","mappings":"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","sources":["utils/items.js","components/ReadSeed/ReadSeed.jsx"],"sourcesContent":["import bee_badge from \"../assets/images/bee_badge.png\";\r\nimport bell from \"../assets/images/bell.png\";\r\nimport bombs from \"../assets/images/bombs.png\";\r\nimport boomerang from \"../assets/images/boomerang.png\";\r\nimport bottle_trade from \"../assets/images/bottle_trade.png\";\r\nimport bottle from \"../assets/images/bottle.png\";\r\nimport bow from \"../assets/images/bow.png\";\r\nimport bow_light from \"../assets/images/bow_light.png\";\r\nimport bracelet from \"../assets/images/bracelet.png\";\r\nimport flippers from \"../assets/images/flippers.png\";\r\nimport frod from \"../assets/images/frod.png\";\r\nimport fsword from \"../assets/images/fsword.png\";\r\nimport hammer from \"../assets/images/hammer.png\";\r\nimport hint_glasses from \"../assets/images/hint_glasses.png\";\r\nimport hookshot from \"../assets/images/hookshot.png\";\r\nimport irod from \"../assets/images/irod.png\";\r\nimport lamp from \"../assets/images/lamp.png\";\r\nimport mail_green from \"../assets/images/mail_green.png\";\r\nimport master_ore from \"../assets/images/master_ore.png\";\r\nimport net from \"../assets/images/net.png\";\r\nimport pegasus_boots from \"../assets/images/pegasus_boots.png\";\r\nimport pouch from \"../assets/images/pouch.png\";\r\nimport power_glove from \"../assets/images/power_glove.png\";\r\nimport unknown_pendant from \"../assets/images/unknown_pendant.png\";\r\nimport shield_hylian from \"../assets/images/shield_hylian.png\";\r\nimport smooth_gem from \"../assets/images/smooth_gem.png\";\r\nimport srod from \"../assets/images/srod.png\";\r\nimport stamina_scroll from \"../assets/images/stamina_scroll.png\";\r\nimport trod from \"../assets/images/trod.png\";\r\nimport Portal from \"../assets/images/Portal.png\";\r\nimport weather_vanes from \"../assets/images/weather_vanes.png\";\r\n\r\nimport EP from \"../assets/images/EP.png\";\r\nimport HG from \"../assets/images/HG.png\";\r\nimport TH from \"../assets/images/TH.png\";\r\nimport PD from \"../assets/images/PD.png\";\r\nimport SP from \"../assets/images/SP.png\";\r\nimport SW from \"../assets/images/SW.png\";\r\nimport T_H from \"../assets/images/T'H.png\";\r\nimport TR from \"../assets/images/TR.png\";\r\nimport DP from \"../assets/images/DP.png\";\r\nimport IR from \"../assets/images/IR.png\";\r\nimport LC from \"../assets/images/LC.png\";\r\n\r\nexport const itemsImg = [\r\n  [\r\n    fsword,\r\n    mail_green,\r\n    shield_hylian,\r\n    power_glove,\r\n    pegasus_boots,\r\n    flippers,\r\n    bell,\r\n    bow_light,\r\n    lamp,\r\n    bow,\r\n    boomerang,\r\n    hookshot,\r\n    hammer,\r\n    bombs,\r\n    frod,\r\n    irod,\r\n    trod,\r\n    srod,\r\n    net,\r\n    bottle,\r\n  ],\r\n  [\r\n    bottle_trade,\r\n    hint_glasses,\r\n    bee_badge,\r\n    bracelet,\r\n    master_ore,\r\n    smooth_gem,\r\n    stamina_scroll,\r\n    pouch,\r\n    unknown_pendant,\r\n    Portal,\r\n    weather_vanes,\r\n  ],\r\n  [EP, HG, TH, PD, SP, SW, T_H, TR, DP, IR, LC],\r\n];\r\n\r\nexport const items = [\r\n  [\r\n    [\"Great Spin\", \"Sword Upgrade\", \"Sword+\"],\r\n    [\"Armor Upgrade\", \"Mail+\"],\r\n    [\"Hylian Shield\"],\r\n    [\"Strength Upgrade\", \"Strength+\"],\r\n    [\"Pegasus Boots\"],\r\n    [\"Zora's Flippers\"],\r\n    [\"Bell\"],\r\n    [\"Bow of Light\"],\r\n    [\"Lamp\", \"Lamp+\"],\r\n    [\"Bow\", \"Bow+\"],\r\n    [\"Boomerang\", \"Boomerang+\"],\r\n    [\"Hookshot\", \"Hookshot+\"],\r\n    [\"Hammer\", \"Hammer+\"],\r\n    [\"Bombs\", \"Bombs+\"],\r\n    [\"Fire Rod\", \"Fire Rod+\"],\r\n    [\"Ice Rod\", \"Ice Rod+\"],\r\n    [\"Tornado Rod\", \"Tornado Rod+\"],\r\n    [\"Sand Rod\", \"Sand Rod+\"],\r\n    [\"Net\", \"Net+\"],\r\n    [\"Empty Bottle\"],\r\n  ],\r\n  [\r\n    [\"Letter in a Bottle\", \"Premium Milk\"],\r\n    [\"Hint Glasses\"],\r\n    [\"Bee Badge\"],\r\n    [\"Bracelet Upgrade\", \"Ravio's Bracelet+\"],\r\n    [\"Master Ore\"],\r\n    [\"Smooth Gem\"],\r\n    [\"Stamina Scroll\"],\r\n    [\"Pouch\"],\r\n    [\r\n      \"Sage Impa\",\r\n      \"Sage Irene\",\r\n      \"Sage Oren\",\r\n      \"Sage Osfala\",\r\n      \"Sage Seres\",\r\n      \"Sage Rosso\",\r\n      \"Sage Gulley\",\r\n      \"Charm\",\r\n      \"Pendant of Courage Upgrade\",\r\n      \"Pendant of Courage\",\r\n      \"Pendant of Wisdom\",\r\n      \"Pendant of Power\",\r\n    ],\r\n    [\"Quake\", \"%portal_map%\", \"%crack_map%\"],\r\n    [\"%weather_vane_map%\"],\r\n  ],\r\n  [\r\n    [\r\n      \"Eastern Palace Compass\",\r\n      \"Eastern Palace Small Key\",\r\n      \"Eastern Palace Big Key\",\r\n    ],\r\n    [\r\n      \"House of Gales Compass\",\r\n      \"House of Gales Small Key\",\r\n      \"House of Gales Big Key\",\r\n    ],\r\n    [\r\n      \"Tower of Hera Compass\",\r\n      \"Tower of Hera Small Key\",\r\n      \"Tower of Hera Big Key\",\r\n    ],\r\n    [\"Dark Palace Compass\", \"Dark Palace Small Key\", \"Dark Palace Big Key\"],\r\n    [\"Swamp Palace Compass\", \"Swamp Palace Small Key\", \"Swamp Palace Big Key\"],\r\n    [\"Skull Woods Compass\", \"Skull Woods Small Key\", \"Skull Woods Big Key\"],\r\n    [\r\n      \"Thieves' Hideout Compass\",\r\n      \"Thieves' Hideout Small Key\",\r\n      \"Thieves' Hideout Big Key\",\r\n    ],\r\n    [\"Turtle Rock Compass\", \"Turtle Rock Small Key\", \"Turtle Rock Big Key\"],\r\n    [\r\n      \"Desert Palace Compass\",\r\n      \"Desert Palace Small Key\",\r\n      \"Desert Palace Big Key\",\r\n    ],\r\n    [\"Ice Ruins Compass\", \"Ice Ruins Small Key\", \"Ice Ruins Big Key\"],\r\n    [\r\n      \"Lorule Castle Compass\",\r\n      \"Lorule Castle Small Key\",\r\n      \"Lorule Castle Big Key\",\r\n    ],\r\n  ],\r\n];\r\n","import \"./ReadSeed.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { items, itemsImg } from \"../../utils/items\";\r\nimport { PageContext } from \"../../utils/contexts/PageContext\";\r\n\r\nconst ReadSeed = ({ data, reset = function () {}, where = \"reader\" }) => {\r\n  const { layout, seed, version = \"????\" } = data;\r\n  const { setIsClicked, locale } = useContext(PageContext);\r\n  const [itemIndex, setItemIndex] = useState({ type: 0, index: 0 });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigate = () => {\r\n    navigate(`/albw?page=${where}`);\r\n    reset({ show: false, index: 0 });\r\n    setIsClicked({ clicked: false, index: 0 });\r\n  };\r\n\r\n  const allLocationsOfItems = () => {\r\n    const locations = [];\r\n    items.map((types, typeIndex) => {\r\n      locations.push([]);\r\n      types.map((itemArray, itemIndex) => {\r\n        locations[typeIndex].push([]);\r\n        itemArray.map((item) => {\r\n          for (const world in layout) {\r\n            for (const zone in layout[world]) {\r\n              for (const location in layout[world][zone]) {\r\n                if (layout[world][zone][location] === item)\r\n                  locations[typeIndex][itemIndex].push(\r\n                    <>\r\n                      <span className=\"location-item\">{item}</span>\r\n                      {` ${locale.readSeed.in} `}\r\n                      <span className=\"location-world\">{world}</span>\r\n                      {` ${locale.readSeed.at} `}\r\n                      <span className=\"location-info\">{`${zone} - ${location}`}</span>\r\n                    </>\r\n                  );\r\n              }\r\n            }\r\n          }\r\n          [\"%portal_map%\", \"%crack_map%\", \"%weather_vane_map%\"].forEach(\r\n            (inclusion) => {\r\n              if (item === inclusion) {\r\n                for (const thing in data[inclusion.replaceAll(\"%\", \"\")]) {\r\n                  locations[typeIndex][itemIndex].push(\r\n                    <>\r\n                      <span className=\"location-item\">\r\n                        {data[inclusion.replaceAll(\"%\", \"\")][thing]}\r\n                      </span>\r\n                      {` ${locale.readSeed.at} `}\r\n                      <span className=\"location-info\">{thing}</span>\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          );\r\n          return null;\r\n        });\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n    return locations;\r\n  };\r\n\r\n  return (\r\n    <div className=\"read-container\">\r\n      <div className=\"read-values\">\r\n        <div className=\"read-infos\">\r\n          <small style={{ color: \"var(--text45)\" }}>\r\n            SEED : <span className=\"location-info\">{seed}</span> ; VERSION :{\" \"}\r\n            <span className=\"location-info\">{version}</span>\r\n          </small>\r\n        </div>\r\n        <div className=\"read-imgs-container\">\r\n          {allLocationsOfItems().map((types, typesIndex) =>\r\n            types[typesIndex].length > 0 ? (\r\n              <div className=\"read-imgs-sub\" key={typesIndex}>\r\n                <h6>{locale.readSeed.types[typesIndex]} :</h6>\r\n                <div className=\"read-imgs\">\r\n                  {types.map((items, itemsIndex) =>\r\n                    items.length > 0 ? (\r\n                      <img\r\n                        alt={\"ICON_\" + typesIndex + \"-\" + itemsIndex}\r\n                        src={itemsImg[typesIndex][itemsIndex]}\r\n                        key={typesIndex + \"-\" + itemsIndex}\r\n                        style={{\r\n                          backgroundColor:\r\n                            itemIndex.type === typesIndex &&\r\n                            itemIndex.index === itemsIndex\r\n                              ? \"var(--secondary35)\"\r\n                              : \"transparent\",\r\n                        }}\r\n                        onClick={() =>\r\n                          setItemIndex({ type: typesIndex, index: itemsIndex })\r\n                        }\r\n                      />\r\n                    ) : undefined\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              false\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"read-items\">\r\n          {allLocationsOfItems()[itemIndex.type][itemIndex.index].map(\r\n            (el, i) => (\r\n              <small key={el + i}>{el}</small>\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n      <small className=\"read-goback\" onClick={handleNavigate}>\r\n        {\"<\"}- {locale.readSeed.return}\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadSeed;\r\n"],"names":["itemsImg","items","_ref","data","reset","where","layout","seed","version","setIsClicked","locale","useContext","PageContext","itemIndex","setItemIndex","useState","type","index","navigate","useNavigate","allLocationsOfItems","locations","map","types","typeIndex","push","itemArray","item","world","zone","location","_jsxs","_Fragment","children","_jsx","className","concat","readSeed","in","at","forEach","inclusion","thing","replaceAll","style","color","typesIndex","length","itemsIndex","alt","src","backgroundColor","onClick","undefined","el","i","handleNavigate","show","clicked","return"],"sourceRoot":""}