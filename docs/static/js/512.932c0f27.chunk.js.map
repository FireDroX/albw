{"version":3,"file":"static/js/512.932c0f27.chunk.js","mappings":"qMASA,MAgJA,EAhJeA,KACb,MAAM,OAAEC,EAAM,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IACtCC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,EAAaA,CAACC,EAAGC,KAErBC,QAAQC,IAAI,gBAAkBF,EAAEG,KAAM,kBACtCF,QAAQC,IAAI,oBAAsBF,EAAEI,iBAAkB,kBACtDH,QAAQC,IAAI,aAAeH,EAAEM,KAAM,kBACnCJ,QAAQC,IAAI,cAAgBH,EAAEO,QAAS,kBACvCL,QAAQC,IAAI,WAAaH,EAAEQ,KAAM,kBACjCN,QAAQC,IACN,iBAAmBM,KAAKC,UAAUV,EAAEW,SAAU,KAAM,GACpD,kBAEFT,QAAQC,IACN,mBAAqBM,KAAKC,UAAUV,EAAEY,gBAAiB,KAAM,IAC3D,EACF,kBAEFV,QAAQC,IACN,iCACEM,KAAKC,UAAUV,EAAEa,yBAA0B,KAAM,GACnD,kBAEFX,QAAQC,IACN,sBAAwBM,KAAKC,UAAUV,EAAEc,cAAe,KAAM,IAC5D,EACF,kBAGFrB,EAAQO,EAAE,EAGZ,OACEe,EAAAA,EAAAA,KAAA,WAASC,UAAU,MAAKC,UACtBF,EAAAA,EAAAA,KAAA,OAAAE,cACYC,IAAT1B,GACC2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCE,EAAAA,EAAAA,MAAA,SAAOE,QAAQ,cAAcL,UAAU,qBAAoBC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAACO,EAAAA,IAAc,OAEjBP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,QAAAE,SAAO1B,EAAOgC,OAAOC,gBAEvBT,EAAAA,EAAAA,KAAA,SACEU,GAAG,cACHC,KAAK,OACLC,OAAO,QACPvB,KAAK,2BACLwB,SAAW3B,IACT,MAAMT,EAAOS,EAAE4B,OAAOC,MAAM,GAC5B,IAAKtC,EAAM,OACX,MAAM+B,EAAS,IAAIQ,WACnBR,EAAOS,OAAUC,IACf,IACE,MAAMC,EAAUzB,KAAK0B,MAAMF,EAAMJ,OAAOO,QACxC,IAAIC,GAAW,EACf,CAAC,OAAQ,UAAUC,SAASC,IACrBL,EAAQM,eAAeD,KAC1BF,GAAW,EACb,IAEGA,GAEHnC,QAAQuC,MACNlD,EAAOgC,OAAOmB,OAAOC,qBAEvB9C,EAASN,EAAOgC,OAAOmB,OAAOC,sBALjB5C,EAAWmC,EAAS1C,EAOrC,CAAE,MAAOiD,GACPvC,QAAQuC,MACNlD,EAAOgC,OAAOmB,OAAOE,aAAeH,GAEtC5C,EAASN,EAAOgC,OAAOmB,OAAOE,aAAeH,EAC/C,GAEFlB,EAAOsB,WAAWrD,GAClBK,EAAS,GAAG,UAKpBkB,EAAAA,EAAAA,KAAA,MAAAE,SAAK1B,EAAOgC,OAAOuB,MACnB3B,EAAAA,EAAAA,MAAA,OACEH,UAAU,aACV+B,OAAS9C,IAAO,IAAD+C,EACb/C,EAAEgD,iBACF,MAAMC,EAAcjD,EAAEkD,aAAarB,MAAM,GACzC,GAAe,OAAXoB,QAAW,IAAXA,GAAiB,QAANF,EAAXE,EAAa9C,YAAI,IAAA4C,GAAjBA,EAAmBI,SAAS,SAAU,CACxC,MAAM7B,EAAS,IAAIQ,WACnBR,EAAOS,OAAUC,IACf,IACE,MAAMC,EAAUzB,KAAK0B,MAAMF,EAAMJ,OAAOO,QACxC,IAAIC,GAAW,EACf,CAAC,OAAQ,UAAUC,SAASC,IACrBL,EAAQM,eAAeD,KAC1BF,GAAW,EACb,IAEGA,GAEHnC,QAAQuC,MACNlD,EAAOgC,OAAOmB,OAAOC,qBAEvB9C,EAASN,EAAOgC,OAAOmB,OAAOC,sBALjB5C,EAAWmC,EAASgB,EAOrC,CAAE,MAAOT,GACPvC,QAAQuC,MACNlD,EAAOgC,OAAOmB,OAAOE,aAAeH,GAEtC5C,EAASN,EAAOgC,OAAOmB,OAAOE,aAAeH,EAC/C,GAEFlB,EAAOsB,WAAWK,GAClBrD,EAAS,GACX,MACEK,QAAQuC,MAAMlD,EAAOgC,OAAOmB,OAAOW,eACnCxD,EAASN,EAAOgC,OAAOmB,OAAOW,cAChC,EAEFC,WAAarD,GAAMA,EAAEgD,iBAAiBhC,SAAA,EAEtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAACwC,EAAAA,IAAoB,OAEvBxC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,QAAAE,SAAO1B,EAAOgC,OAAOiC,oBAI3BzC,EAAAA,EAAAA,KAAA,MAAI0C,MAAO,CAAEC,MAAO,OAAQzC,SAAErB,QAGhCmB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAACC,KAAMpE,EAAMqE,MAAOpE,OAGzB,C","sources":["pages/reader/Reader.jsx"],"sourcesContent":["import \"./Reader.css\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport { BsFiletypeJson } from \"react-icons/bs\";\r\nimport { IoCloudUploadOutline } from \"react-icons/io5\";\r\nimport { PageContext } from \"../../utils/contexts/PageContext\";\r\n\r\nimport ReadSeed from \"../../components/ReadSeed/ReadSeed\";\r\n\r\nconst Reader = () => {\r\n  const { locale, file, setFile } = useContext(PageContext);\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const handleFile = (f, e) => {\r\n    // Just some file infos\r\n    console.log(\"File name: %c\" + e.name, \"color: #42f578\");\r\n    console.log(\"Last modified: %c\" + e.lastModifiedDate, \"color: #42f578\");\r\n    console.log(\"\\nSeed: %c\" + f.seed, \"color: #42f578\");\r\n    console.log(\"Version: %c\" + f.version, \"color: #42f578\");\r\n    console.log(\"Hash: %c\" + f.hash, \"color: #42f578\");\r\n    console.log(\r\n      \"Settings: \\n%c\" + JSON.stringify(f.settings, null, 2),\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Exclusions: \\n%c\" + JSON.stringify(f.full_exclusions, null, 2) ||\r\n        \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Treacherous tower floors: \\n%c\" +\r\n        JSON.stringify(f.treacherous_tower_floors, null, 2),\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Trials config: \\n%c\" + JSON.stringify(f.trials_config, null, 2) ||\r\n        \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n\r\n    setFile(f);\r\n  };\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        {file === undefined ? (\r\n          <>\r\n            <div className=\"reader-imports\">\r\n              <div className=\"reader-choosefile\">\r\n                <label htmlFor=\"file-upload\" className=\"custum-file-upload\">\r\n                  <div className=\"reader-icon\">\r\n                    <BsFiletypeJson />\r\n                  </div>\r\n                  <div className=\"reader-txt\">\r\n                    <span>{locale.reader.importText}</span>\r\n                  </div>\r\n                  <input\r\n                    id=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".json\"\r\n                    name=\"Import JSON Spoiler Logs\"\r\n                    onChange={(e) => {\r\n                      const file = e.target.files[0];\r\n                      if (!file) return;\r\n                      const reader = new FileReader();\r\n                      reader.onload = (event) => {\r\n                        try {\r\n                          const newData = JSON.parse(event.target.result);\r\n                          let dontPass = false;\r\n                          [\"seed\", \"layout\"].forEach((prop) => {\r\n                            if (!newData.hasOwnProperty(prop)) {\r\n                              dontPass = true;\r\n                            }\r\n                          });\r\n                          if (!dontPass) handleFile(newData, file);\r\n                          else {\r\n                            console.error(\r\n                              locale.reader.alerts.missingRequirements\r\n                            );\r\n                            setAlert(locale.reader.alerts.missingRequirements);\r\n                          }\r\n                        } catch (error) {\r\n                          console.error(\r\n                            locale.reader.alerts.errorParsing + error\r\n                          );\r\n                          setAlert(locale.reader.alerts.errorParsing + error);\r\n                        }\r\n                      };\r\n                      reader.readAsText(file);\r\n                      setAlert(\"\");\r\n                    }}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <h4>{locale.reader.or}</h4>\r\n              <div\r\n                className=\"reader-dnd\"\r\n                onDrop={(e) => {\r\n                  e.preventDefault();\r\n                  const droppedFile = e.dataTransfer.files[0];\r\n                  if (droppedFile?.name?.endsWith(\".json\")) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                      try {\r\n                        const newData = JSON.parse(event.target.result);\r\n                        let dontPass = false;\r\n                        [\"seed\", \"layout\"].forEach((prop) => {\r\n                          if (!newData.hasOwnProperty(prop)) {\r\n                            dontPass = true;\r\n                          }\r\n                        });\r\n                        if (!dontPass) handleFile(newData, droppedFile);\r\n                        else {\r\n                          console.error(\r\n                            locale.reader.alerts.missingRequirements\r\n                          );\r\n                          setAlert(locale.reader.alerts.missingRequirements);\r\n                        }\r\n                      } catch (error) {\r\n                        console.error(\r\n                          locale.reader.alerts.errorParsing + error\r\n                        );\r\n                        setAlert(locale.reader.alerts.errorParsing + error);\r\n                      }\r\n                    };\r\n                    reader.readAsText(droppedFile);\r\n                    setAlert(\"\");\r\n                  } else {\r\n                    console.error(locale.reader.alerts.notCompatible);\r\n                    setAlert(locale.reader.alerts.notCompatible);\r\n                  }\r\n                }}\r\n                onDragOver={(e) => e.preventDefault()}\r\n              >\r\n                <div className=\"reader-icon\">\r\n                  <IoCloudUploadOutline />\r\n                </div>\r\n                <div className=\"reader-txt\">\r\n                  <span>{locale.reader.dropText}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h6 style={{ color: \"red\" }}>{alert}</h6>\r\n          </>\r\n        ) : (\r\n          <ReadSeed data={file} reset={setFile} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reader;\r\n"],"names":["Reader","locale","file","setFile","useContext","PageContext","alert","setAlert","useState","handleFile","f","e","console","log","name","lastModifiedDate","seed","version","hash","JSON","stringify","settings","full_exclusions","treacherous_tower_floors","trials_config","_jsx","className","children","undefined","_jsxs","_Fragment","htmlFor","BsFiletypeJson","reader","importText","id","type","accept","onChange","target","files","FileReader","onload","event","newData","parse","result","dontPass","forEach","prop","hasOwnProperty","error","alerts","missingRequirements","errorParsing","readAsText","or","onDrop","_droppedFile$name","preventDefault","droppedFile","dataTransfer","endsWith","notCompatible","onDragOver","IoCloudUploadOutline","dropText","style","color","ReadSeed","data","reset"],"sourceRoot":""}