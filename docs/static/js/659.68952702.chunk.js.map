{"version":3,"file":"static/js/659.68952702.chunk.js","mappings":"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","sources":["utils/runs.js","components/RunInfos/RunInfos.jsx","pages/best/Best.jsx"],"sourcesContent":["function month(n) {\r\n  // Months are zero-based (0 to 11)\r\n  return n - 1;\r\n}\r\n\r\nexport const fast = [\r\n  {\r\n    data: require(\"./logs/fast/1h20m47.33s_1240282282_spoiler.json\"),\r\n    name: \"1h20m47.33s_1240282282\",\r\n    date: new Date(2024, month(4), 19, 17, 6),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/1h24m00.95s_1399924088_spoiler.json\"),\r\n    name: \"1h24m00.95s_1399924088\",\r\n    date: new Date(2024, month(5), 7, 15, 28),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/1h52m03.40s_2460739470_spoiler.json\"),\r\n    name: \"1h52m03.40s_2460739470\",\r\n    date: new Date(2024, month(5), 4, 20, 21),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/1h57m25.48s_1294316049_spoiler.json\"),\r\n    name: \"1h57m25.48s_1294316049\",\r\n    date: new Date(2024, month(5), 8, 15, 16),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h18m20.66s_0304153701_spoiler.json\"),\r\n    name: \"2h18m20.66s_0304153701\",\r\n    date: new Date(2024, month(5), 7, 18, 15),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h20m46.97s_2766334619_spoiler.json\"),\r\n    name: \"2h20m46.97s_2766334619\",\r\n    date: new Date(2024, month(5), 5, 21, 14),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h31m22.28s_2169202125_spoiler.json\"),\r\n    name: \"2h31m22.28s_2169202125\",\r\n    date: new Date(2024, month(5), 3, 21, 21),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h36m55.11s_4033371893_spoiler.json\"),\r\n    name: \"2h36m55.11s_4033371893\",\r\n    date: new Date(2024, month(4), 20, 19, 54),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h37m17.93s_1223352703_spoiler.json\"),\r\n    name: \"2h37m17.93s_1223352703\",\r\n    date: new Date(2024, month(5), 9, 21, 3),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h52m43.91s_2713425126_spoiler.json\"),\r\n    name: \"2h52m43.91s_2713425126\",\r\n    date: new Date(2024, month(4), 14, 20, 56),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h58m04.90s_3778344289_spoiler.json\"),\r\n    name: \"2h58m04.90s_3778344289\",\r\n    date: new Date(2024, month(4), 30, 16, 21),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/3h50m42.04s_1029320108_spoiler.json\"),\r\n    name: \"3h50m42.04s_1029320108\",\r\n    date: new Date(2024, month(4), 16, 18, 31),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h46m10.84s_2006808928_spoiler.json\"),\r\n    name: \"2h46m10.84s_2006808928\",\r\n    date: new Date(2024, month(5), 10, 20, 45),\r\n  },\r\n  {\r\n    data: require(\"./logs/fast/2h10m31.00s_3202980712_spoiler.json\"),\r\n    name: \"2h10m31.00s_3202980712\",\r\n    date: new Date(2024, month(5), 11, 20, 44),\r\n  },\r\n];\r\n","import \"./RunInfos.css\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport { FaTrophy } from \"react-icons/fa\";\r\nimport { RunContext } from \"../../utils/RunContext\";\r\nimport ReadSeed from \"../ReadSeed/ReadSeed\";\r\n\r\nconst RunInfos = ({ place, data, name, date, index }) => {\r\n  const { setIsClicked } = useContext(RunContext);\r\n  const [spoilers, setSpoilers] = useState(false);\r\n\r\n  const time = name.split(\"_\")[0];\r\n  const seed = name.split(\"_\")[1];\r\n\r\n  const handleSpoilers = () => {\r\n    setSpoilers(!spoilers);\r\n    setIsClicked({ clicked: true, index: index });\r\n  };\r\n\r\n  const compareDate = (time) => {\r\n    let currentDate = new Date();\r\n\r\n    let timeDifference = Math.abs(currentDate.getTime() - time);\r\n    let secondsDifference = Math.floor(timeDifference / 1000);\r\n\r\n    if (secondsDifference < 60) {\r\n      return \"now\";\r\n    } else if (secondsDifference < 3600) {\r\n      let minutesDifference = Math.floor(secondsDifference / 60);\r\n      return minutesDifference + \" min(s) ago\";\r\n    } else if (secondsDifference < 86400) {\r\n      let hoursDifference = Math.floor(secondsDifference / 3600);\r\n      return hoursDifference + \" hour(s) ago\";\r\n    } else if (secondsDifference < 31536000) {\r\n      let daysDifference = Math.floor(secondsDifference / 86400);\r\n      return daysDifference + \" day(s) ago\";\r\n    } else {\r\n      let yearsDifference = Math.floor(secondsDifference / 31536000);\r\n      return yearsDifference + \" year(s) ago\";\r\n    }\r\n  };\r\n\r\n  return !spoilers ? (\r\n    <div className=\"runInfos-container\">\r\n      <small className=\"runInfos-place\">\r\n        {place === 1 ? (\r\n          <FaTrophy color=\"#FFD700\" />\r\n        ) : place === 2 ? (\r\n          <FaTrophy color=\"#C0C0C0\" />\r\n        ) : place === 3 ? (\r\n          <FaTrophy color=\"#CD7F32\" />\r\n        ) : (\r\n          place\r\n        )}\r\n      </small>\r\n      {\" - \"}\r\n      <small className=\"runInfos-time\">\r\n        {time.replace(/[hm]/g, function (match) {\r\n          return match + \" \";\r\n        })}\r\n      </small>\r\n      {\" - \"}\r\n      <small className=\"runInfos-date\">{compareDate(date.getTime())}</small>\r\n      {\" - \"}\r\n      <small className=\"runInfos-date\">{data.version || \"Unknown\"}</small>\r\n      {\" - \"}\r\n      <small className=\"runInfos-seed\">{seed}</small>\r\n      {\" - \"}\r\n      <small className=\"runInfos-spoilers\" onClick={handleSpoilers}>\r\n        SPOILERS\r\n      </small>\r\n    </div>\r\n  ) : (\r\n    <ReadSeed data={data} where=\"best\" reset={setSpoilers} />\r\n  );\r\n};\r\n\r\nexport default RunInfos;\r\n","import \"./Best.css\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport { fast } from \"../../utils/runs\";\r\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\r\nimport RunInfos from \"../../components/RunInfos/RunInfos\";\r\nimport preset from \"../../utils/presets/Fast.json\";\r\nimport { RunContext } from \"../../utils/RunContext\";\r\n\r\nconst Best = () => {\r\n  const { isClicked } = useContext(RunContext);\r\n  const [viewMore, setViewMore] = useState(5);\r\n  const filteredRuns = fast.sort((a, b) => {\r\n    return (\r\n      parseInt(a.name.split(\"_\")[0].replace(/[hms.]/g, \"\")) -\r\n      parseInt(b.name.split(\"_\")[0].replace(/[hms.]/g, \"\"))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        <div className=\"best-page\">\r\n          <small>\r\n            All done with a{\" \"}\r\n            <a\r\n              href={`data:text/json;charset=uft-8,${encodeURIComponent(\r\n                JSON.stringify(preset, null, 2)\r\n              )}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              download={\"Fast.json\"}\r\n            >\r\n              Fast\r\n            </a>{\" \"}\r\n            preset (click \"Fast\" to download the preset)\r\n          </small>\r\n          <div className=\"best-container\">\r\n            {filteredRuns\r\n              .slice(0, viewMore)\r\n              .map((run, i) =>\r\n                isClicked.clicked && isClicked.index !== i ? undefined : (\r\n                  <RunInfos\r\n                    data={run.data}\r\n                    name={run.name}\r\n                    date={run.date}\r\n                    place={i + 1}\r\n                    index={i}\r\n                    key={i}\r\n                  />\r\n                )\r\n              )}\r\n          </div>\r\n          {isClicked.clicked ? undefined : viewMore === undefined ? (\r\n            <div className=\"best-viewMore\">\r\n              <small className=\"best-viewMore\" onClick={() => setViewMore(5)}>\r\n                View less <FaArrowUp />\r\n              </small>\r\n            </div>\r\n          ) : (\r\n            <div className=\"best-viewMore\">\r\n              <small\r\n                className=\"best-viewMore\"\r\n                onClick={() => setViewMore(undefined)}\r\n              >\r\n                View more <FaArrowDown />\r\n              </small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Best;\r\n"],"names":["month","n","fast","data","require","name","date","Date","_ref","place","index","setIsClicked","useContext","RunContext","spoilers","setSpoilers","useState","time","split","seed","_jsx","ReadSeed","where","reset","_jsxs","className","children","FaTrophy","color","replace","match","currentDate","timeDifference","Math","abs","getTime","secondsDifference","floor","compareDate","version","onClick","handleSpoilers","clicked","Best","isClicked","viewMore","setViewMore","filteredRuns","sort","a","b","parseInt","href","concat","encodeURIComponent","JSON","stringify","preset","target","rel","download","slice","map","run","i","undefined","RunInfos","FaArrowUp","FaArrowDown"],"sourceRoot":""}