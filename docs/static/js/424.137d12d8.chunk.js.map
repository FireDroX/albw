{"version":3,"file":"static/js/424.137d12d8.chunk.js","mappings":"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","sources":["utils/items.js","components/ReadSeed/ReadSeed.jsx","pages/reader/Reader.jsx"],"sourcesContent":["import bee_badge from \"../assets/images/bee_badge.png\";\r\nimport bell from \"../assets/images/bell.png\";\r\nimport bombs from \"../assets/images/bombs.png\";\r\nimport boomerang from \"../assets/images/boomerang.png\";\r\nimport bottle_letter from \"../assets/images/bottle_letter.png\";\r\nimport bottle from \"../assets/images/bottle.png\";\r\nimport bow from \"../assets/images/bow.png\";\r\nimport bow_light from \"../assets/images/bow_light.png\";\r\nimport bracelet from \"../assets/images/bracelet.png\";\r\nimport flippers from \"../assets/images/flippers.png\";\r\nimport frod from \"../assets/images/frod.png\";\r\nimport fsword from \"../assets/images/fsword.png\";\r\nimport hammer from \"../assets/images/hammer.png\";\r\nimport hint_glasses from \"../assets/images/hint_glasses.png\";\r\nimport hookshot from \"../assets/images/hookshot.png\";\r\nimport irod from \"../assets/images/irod.png\";\r\nimport lamp from \"../assets/images/lamp.png\";\r\nimport mail_green from \"../assets/images/mail_green.png\";\r\nimport master_ore from \"../assets/images/master_ore.png\";\r\nimport net from \"../assets/images/net.png\";\r\nimport pegasus_boots from \"../assets/images/pegasus_boots.png\";\r\nimport pouch from \"../assets/images/pouch.png\";\r\nimport power_glove from \"../assets/images/power_glove.png\";\r\nimport sage_gulley from \"../assets/images/sage_gulley.png\";\r\nimport shield_hylian from \"../assets/images/shield_hylian.png\";\r\nimport smooth_gem from \"../assets/images/smooth_gem.png\";\r\nimport srod from \"../assets/images/srod.png\";\r\nimport stamina_scroll from \"../assets/images/stamina_scroll.png\";\r\nimport trod from \"../assets/images/trod.png\";\r\n\r\nexport const itemsImg = [\r\n  fsword,\r\n  mail_green,\r\n  shield_hylian,\r\n  power_glove,\r\n  pegasus_boots,\r\n  flippers,\r\n  stamina_scroll,\r\n  bow_light,\r\n  lamp,\r\n  bow,\r\n  boomerang,\r\n  hookshot,\r\n  hammer,\r\n  bombs,\r\n  frod,\r\n  irod,\r\n  trod,\r\n  srod,\r\n  net,\r\n  hint_glasses,\r\n  bottle,\r\n  bottle_letter,\r\n  bee_badge,\r\n  bracelet,\r\n  master_ore,\r\n  smooth_gem,\r\n  bell,\r\n  pouch,\r\n  sage_gulley,\r\n];\r\n\r\nexport const items = [\r\n  [\"Great Spin\", \"Sword Upgrade\"],\r\n  [\"Armor Upgrade\"],\r\n  [\"Hylian Shield\"],\r\n  [\"Strength Upgrade\"],\r\n  [\"Pegasus Boots\"],\r\n  [\"Zora's Flippers\"],\r\n  [\"Stamina Scroll\"],\r\n  [\"Bow of Light\"],\r\n  [\"Lamp\"],\r\n  [\"Bow\"],\r\n  [\"Boomerang\"],\r\n  [\"Hookshot\"],\r\n  [\"Hammer\"],\r\n  [\"Bombs\"],\r\n  [\"Fire Rod\"],\r\n  [\"Ice Rod\"],\r\n  [\"Tornado Rod\"],\r\n  [\"Sand Rod\"],\r\n  [\"Net\"],\r\n  [\"Hint Glasses\"],\r\n  [\"Empty Bottle\"],\r\n  [\"Letter in a Bottle\"],\r\n  [\"Bee Badge\"],\r\n  [\"Bracelet Upgrade\"],\r\n  [\"Master Ore\"],\r\n  [\"Smooth Gem\"],\r\n  [\"Bell\"],\r\n  [\"Pouch\"],\r\n  [\r\n    \"Sage Impa\",\r\n    \"Sage Irene\",\r\n    \"Sage Oren\",\r\n    \"Sage Osfala\",\r\n    \"Sage Seres\",\r\n    \"Sage Rosso\",\r\n    \"Sage Gulley\",\r\n    \"Pendant of Courage Upgrade\",\r\n    \"Pendant of Widsom\",\r\n    \"Pendant of Power\",\r\n  ],\r\n];\r\n","import \"./ReadSeed.css\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { items, itemsImg } from \"../../utils/items\";\r\n\r\nconst ReadSeed = ({ data, reset = function () {}, where = \"reader\" }) => {\r\n  const { layout, seed, version } = data;\r\n  const [itemIndex, setItemIndex] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigate = () => {\r\n    navigate(\"/albw/\" + where);\r\n    reset(undefined);\r\n  };\r\n\r\n  function findLocationOfItemsInLayout(itemsName) {\r\n    const locations = [];\r\n    itemsName.map((item, index) => {\r\n      for (const world in layout) {\r\n        for (const zone in layout[world]) {\r\n          for (const location in layout[world][zone]) {\r\n            if (layout[world][zone][location] === item)\r\n              locations.push(\r\n                <>\r\n                  <span className=\"location-item\">{item}</span>\r\n                  {\" in \"}\r\n                  <span className=\"location-world\">{world}</span>\r\n                  {\" at \"}\r\n                  <span className=\"location-info\">{`${zone} - ${location}`}</span>\r\n                </>\r\n              );\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    return locations;\r\n  }\r\n\r\n  return (\r\n    <div className=\"read-container\">\r\n      <div className=\"read-values\">\r\n        <div className=\"read-infos\">\r\n          <small style={{ color: \"var(--text45)\" }}>\r\n            SEED :<span className=\"location-info\">{seed}</span> ; VERSION :{\" \"}\r\n            <span className=\"location-info\">{version}</span>\r\n          </small>\r\n        </div>\r\n        <div className=\"read-imgs\">\r\n          {itemsImg.map((img, i) => (\r\n            <img\r\n              alt={\"ICON_\" + i}\r\n              src={img}\r\n              key={img + i}\r\n              style={{\r\n                backgroundColor:\r\n                  itemIndex === i ? \"var(--secondary35)\" : \"transparent\",\r\n              }}\r\n              onClick={() => setItemIndex(i)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"read-items\">\r\n          {findLocationOfItemsInLayout(items[itemIndex]).map((el, i) => (\r\n            <small key={el + i}>{el}</small>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <small className=\"read-goback\" onClick={handleNavigate}>\r\n        {\"<\"}- RETURN\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadSeed;\r\n","import \"./Reader.css\";\r\nimport { useState } from \"react\";\r\n\r\nimport { BsFiletypeJson } from \"react-icons/bs\";\r\nimport { IoCloudUploadOutline } from \"react-icons/io5\";\r\n\r\nimport ReadSeed from \"../../components/ReadSeed/ReadSeed\";\r\n\r\nconst Reader = () => {\r\n  const [file, setFile] = useState(undefined);\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        {file === undefined ? (\r\n          <div className=\"reader-imports\">\r\n            <div className=\"reader-choosefile\">\r\n              <label htmlFor=\"file-upload\" className=\"custum-file-upload\">\r\n                <div className=\"reader-icon\">\r\n                  <BsFiletypeJson />\r\n                </div>\r\n                <div className=\"reader-txt\">\r\n                  <span>Click to upload a JSON file.</span>\r\n                </div>\r\n                <input\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  name=\"Import JSON Spoiler Logs\"\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    if (file?.name?.endsWith(\".json\")) {\r\n                      const reader = new FileReader();\r\n                      reader.onload = (event) => {\r\n                        try {\r\n                          const newData = JSON.parse(event.target.result);\r\n                          let dontPass = false;\r\n                          [\"seed\", \"version\", \"layout\"].forEach((prop) => {\r\n                            if (!newData.hasOwnProperty(prop)) {\r\n                              dontPass = true;\r\n                            }\r\n                          });\r\n                          if (!dontPass) setFile(newData);\r\n                          else alert(\"Required properties are missing.\");\r\n                        } catch (error) {\r\n                          alert(\"Error parsing JSON: \" + error);\r\n                        }\r\n                      };\r\n                      reader.readAsText(file);\r\n                    } else {\r\n                      alert(\r\n                        \"This type of file is not compatible. Please use only .json files !\"\r\n                      );\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n            <h4>OR</h4>\r\n            <div\r\n              className=\"reader-dnd\"\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const droppedFile = e.dataTransfer.files[0];\r\n                if (droppedFile?.name?.endsWith(\".json\")) {\r\n                  const reader = new FileReader();\r\n                  reader.onload = (event) => {\r\n                    try {\r\n                      const newData = JSON.parse(event.target.result);\r\n                      let dontPass = false;\r\n                      [\"seed\", \"version\", \"layout\"].forEach((prop) => {\r\n                        if (!newData.hasOwnProperty(prop)) {\r\n                          dontPass = true;\r\n                        }\r\n                      });\r\n                      if (!dontPass) setFile(newData);\r\n                      else alert(\"Required properties are missing.\");\r\n                    } catch (error) {\r\n                      alert(\"Error parsing JSON: \" + error);\r\n                    }\r\n                  };\r\n                  reader.readAsText(droppedFile);\r\n                } else {\r\n                  alert(\r\n                    \"This type of file is not compatible. Please use only .json files !\"\r\n                  );\r\n                }\r\n              }}\r\n              onDragOver={(e) => e.preventDefault()}\r\n            >\r\n              <div className=\"reader-icon\">\r\n                <IoCloudUploadOutline />\r\n              </div>\r\n              <div className=\"reader-txt\">\r\n                <span>Drag and Drop it !</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <ReadSeed data={file} reset={setFile} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reader;\r\n"],"names":["itemsImg","items","_ref","data","reset","where","layout","seed","version","itemIndex","setItemIndex","useState","navigate","useNavigate","_jsxs","className","children","_jsx","style","color","map","img","i","alt","src","backgroundColor","onClick","itemsName","locations","item","index","world","zone","location","push","_Fragment","concat","findLocationOfItemsInLayout","el","handleNavigate","undefined","Reader","file","setFile","htmlFor","BsFiletypeJson","id","type","name","onChange","e","_file$name","target","files","endsWith","reader","FileReader","onload","event","newData","JSON","parse","result","dontPass","forEach","prop","hasOwnProperty","alert","error","readAsText","onDrop","_droppedFile$name","preventDefault","droppedFile","dataTransfer","onDragOver","IoCloudUploadOutline","ReadSeed"],"sourceRoot":""}