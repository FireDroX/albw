{"version":3,"file":"static/js/512.e8d6a1de.chunk.js","mappings":"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","sources":["pages/reader/Reader.jsx"],"sourcesContent":["import \"./Reader.css\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { BsFiletypeJson } from \"react-icons/bs\";\r\nimport { IoCloudUploadOutline } from \"react-icons/io5\";\r\nimport { PageContext } from \"../../utils/contexts/PageContext\";\r\n\r\nimport ReadSeed from \"../../components/ReadSeed/ReadSeed\";\r\n\r\nconst Reader = () => {\r\n  const { locale, file, setFile } = useContext(PageContext);\r\n\r\n  const handleFile = (f, e) => {\r\n    // Just some file infos\r\n    console.log(\"File name: %c\" + e.name, \"color: #42f578\");\r\n    console.log(\"Last modified: %c\" + e.lastModifiedDate, \"color: #42f578\");\r\n    console.log(\"\\nSeed: %c\" + f.seed || \"Not Found\", \"color: #42f578\");\r\n    console.log(\"Version: %c\" + f.version || \"Not Found\", \"color: #42f578\");\r\n    console.log(\"Hash: %c\" + f.hash || \"Not Found\", \"color: #42f578\");\r\n    console.log(\r\n      \"Settings: \\n%c\" + JSON.stringify(f.settings, null, 2) || \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Exclusions: \\n%c\" + JSON.stringify(f.full_exclusions, null, 2) ||\r\n        \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Treacherous tower floors: \\n%c\" +\r\n        JSON.stringify(f.treacherous_tower_floors, null, 2) || \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n    console.log(\r\n      \"Trials config: \\n%c\" + JSON.stringify(f.trials_config, null, 2) ||\r\n        \"Not Found\",\r\n      \"color: #42f578\"\r\n    );\r\n\r\n    setFile(f);\r\n  };\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        {file === undefined ? (\r\n          <div className=\"reader-imports\">\r\n            <div className=\"reader-choosefile\">\r\n              <label htmlFor=\"file-upload\" className=\"custum-file-upload\">\r\n                <div className=\"reader-icon\">\r\n                  <BsFiletypeJson />\r\n                </div>\r\n                <div className=\"reader-txt\">\r\n                  <span>{locale.reader.importText}</span>\r\n                </div>\r\n                <input\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  name=\"Import JSON Spoiler Logs\"\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    if (file?.name?.endsWith(\".json\")) {\r\n                      const reader = new FileReader();\r\n                      reader.onload = (event) => {\r\n                        try {\r\n                          const newData = JSON.parse(event.target.result);\r\n                          let dontPass = false;\r\n                          [\"seed\", \"layout\"].forEach((prop) => {\r\n                            if (!newData.hasOwnProperty(prop)) {\r\n                              dontPass = true;\r\n                            }\r\n                          });\r\n                          if (!dontPass) handleFile(newData, file);\r\n                          else alert(locale.reader.alerts.missingRequirements);\r\n                        } catch (error) {\r\n                          alert(locale.reader.alerts.errorParsing + error);\r\n                        }\r\n                      };\r\n                      reader.readAsText(file);\r\n                    } else {\r\n                      alert(locale.reader.alerts.notCompatible);\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n            <h4>{locale.reader.or}</h4>\r\n            <div\r\n              className=\"reader-dnd\"\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const droppedFile = e.dataTransfer.files[0];\r\n                if (droppedFile?.name?.endsWith(\".json\")) {\r\n                  const reader = new FileReader();\r\n                  reader.onload = (event) => {\r\n                    try {\r\n                      const newData = JSON.parse(event.target.result);\r\n                      let dontPass = false;\r\n                      [\"seed\", \"layout\"].forEach((prop) => {\r\n                        if (!newData.hasOwnProperty(prop)) {\r\n                          dontPass = true;\r\n                        }\r\n                      });\r\n                      if (!dontPass) handleFile(newData, droppedFile);\r\n                      else alert(locale.reader.alerts.missingRequirements);\r\n                    } catch (error) {\r\n                      alert(locale.reader.alerts.errorParsing + error);\r\n                    }\r\n                  };\r\n                  reader.readAsText(droppedFile);\r\n                } else {\r\n                  alert(locale.reader.alerts.notCompatible);\r\n                }\r\n              }}\r\n              onDragOver={(e) => e.preventDefault()}\r\n            >\r\n              <div className=\"reader-icon\">\r\n                <IoCloudUploadOutline />\r\n              </div>\r\n              <div className=\"reader-txt\">\r\n                <span>{locale.reader.dropText}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <ReadSeed data={file} reset={setFile} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reader;\r\n"],"names":["Reader","locale","file","setFile","useContext","PageContext","handleFile","f","e","console","log","name","lastModifiedDate","seed","version","hash","JSON","stringify","settings","full_exclusions","treacherous_tower_floors","trials_config","_jsx","className","children","undefined","_jsxs","htmlFor","BsFiletypeJson","reader","importText","id","type","onChange","_file$name","target","files","endsWith","FileReader","onload","event","newData","parse","result","dontPass","forEach","prop","hasOwnProperty","alert","alerts","missingRequirements","error","errorParsing","readAsText","notCompatible","or","onDrop","_droppedFile$name","preventDefault","droppedFile","dataTransfer","onDragOver","IoCloudUploadOutline","dropText","ReadSeed","data","reset"],"sourceRoot":""}